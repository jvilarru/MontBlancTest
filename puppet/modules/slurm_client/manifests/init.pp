#IDEA: pillar el basename, clustername i demas de el hostname
class slurm_client ( $basename,
			$init_node_number,
			$end_node_number,
			$clustername,
			$accounting_hostname,
			$controller_hostname,
			$controller_ip_address,
			$slurmdbd_pass
) {
	# installation
	build_source{"$module_name":
		url      => "$module_name/slurm-14.11.7.tar.bz2",
		options  => template("$module_name/options.erb"),
		version  => "14.11.7",
		packages => ["munge","libmunge-dev","libcr-dev","libpam0g-dev","libssl-dev","openssl","libmysqld-dev","mysql-common","pkg-config","libxml2-dev","hwloc","libmysqlclient-dev","libhwloc-dev"]
	}
	
	# SLURM user configuration
	group { "$module_name group":
		name   => "slurm",
		ensure => present,
		gid    => 999,
		system => true
	}
	user {  "$module_name user":
		name    => "$module_name",
		ensure  => present,
		uid     => '999',
		system  => true,
		gid     => '999',
		require => Group["$module_name group"]
	}

	# SLURM needed folders
	File {
		user    => "slurm",
		group   => "slurm",
		require => User["$module_name user"],
		mode    => '644'
	}
	$slurmdir = "/opt/slurm/14.11.7"
	$bindir = "$slurmdir/bin"
	$sbindir = "$slurmdir/sbin"
	$libdir = "$slurmdir/lib"
	$sysconfdir = "$slurmdir/etc"
	$BLUEGENE_LOADED_FALSE = "FALSE"

	# Variables for slurm.conf
	$nProcessors = $::processorcount
	$nSockets = $::physicalprocessorcount
	$memory = $::memorysize_mb


	file {
	"$module_name sysconfdir folder":
		ensure => directory,
		mode   => '755',
		path   => "$sysconfdir";
	"$module_name script folder":
		ensure  => directory,
		mode    => '755',
		path    => "$sysconfdir/scripts";
	"$module_name var folder":
		ensure => directory,
		mode   => '755',
		path   => "$slurmdir/var";
	"$modeule_name var_log folder":
		ensure  => directory,
		mode    => '755',
		path    => "$slurmdir/var/log";
	"$modeule_name var_slurm folder":
		ensure => directory,
		mode   => '755',
		path   => "$slurmdir/var/slurm";
	}

	# SLURM Files
	file {
	"$module_name init script":
		ensure  => file,
		user    => 'root',
		group   => 'root',
		mode    => '755',
		content => template("$module_name/init.d.slurm.erb"),
		path   => "/etc/init.d/slurm";
	"$module_name ld_library_path file":
		ensure    => file,
		user      => 'root',
		group     => 'root',
		content   => template("$module_name/ldconfig.erb"),
		path      => "/etc/ld.so.conf.d/slurm.conf";
		#	trigger => Exec["$module_name ldconfig"]; 
		#   	PORQUE NO?
		#	Si es buena idea
	"$module_name slurm configuration file":
		ensure  => file,
		path    => "$sysconfdir/slurm.conf",
		content => template("$module_name/slurm_configuration.erb");
	"$module_name slurm DB configuration":
		ensure  => file,
		path    => "$sysconfdir/slurmdbd.conf",
		content => template("$module_name/slurm_db_configuration.erb");
	"$module_name slurm ssl public key":
		ensure => file,
		path   => "$sysconfdir/public.key",
		source => "puppet:///$module_name/public.key"; # MUST be put there by the user or generated by the server
	}
}
